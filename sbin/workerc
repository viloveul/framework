#!/usr/bin/env node
const fs = require('fs')
const amqp = require('amqp')
const dotenv = require("dotenv")

console.info('Load .env file ...')
const myenvi = fs.readFileSync('.env')

console.info('Parse .env file ...')
const envi = dotenv.parse(myenvi)

for (let envk in envi) {
  if (envk.search(/^VILOVEUL_/) !== -1) {
    process.env[envk] = envi[envk]
  }
}

const dsn = process.env.VILOVEUL_BROKER_DSN === undefined ? 'amqp://localhost:5672/%2f' : process.env.VILOVEUL_BROKER_DSN

console.info('connecting to broker message on ' + dsn)
// rabbitmq connection
const broker = amqp.createConnection({
  url: dsn
})

let initial = {
  id: 0,
  task: 'system.message',
  data: {},
  args: []
}

// handle when connection rabbitmq ready
broker.on('ready', () => {
  console.info('broker message connected')
  broker.queue('viloveul.system.worker', {durable: true, autoDelete: false}, (queue) => {
    queue.subscribe(async (message) => {
      let res = Object.assign({}, initial, message)
      try {
        let fname = 'worker/' + res.task + '.js'
        if (fs.existsSync(fname)) {
          require('../' + fname).exec(res.data, res.args)
        } else {
          console.error('worker not found for task:' + res.task)
        }
      } catch (e) {
        console.error(e)
      }
    })
  })
})

// handle error
broker.on('error', function(e) {
  console.info("Error from amqp: ", e)
})
